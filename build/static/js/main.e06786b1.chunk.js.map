{"version":3,"sources":["components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/ui-slice.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/index.js","index.js","components/Cart/CartItem.module.css"],"names":["module","exports","Card","props","className","classes","card","children","initialToggleSlice","createSlice","name","initialState","show","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","toggleActions","actions","cartSlice","items","totalQuantity","changed","replaceCart","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","filter","cartActions","CartItem","total","dispatch","useDispatch","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","CartButton","cartCount","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitail","App","toggler","useEffect","fetchdata","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","toggleReducer","cartReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e06786b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__3C8Pm\",\"price\":\"ProductItem_price__2AO54\",\"actions\":\"ProductItem_actions__3aE1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3oP_Q\",\"error\":\"Notification_error__CGSrU\",\"success\":\"Notification_success__2B60i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__1uj1y\",\"badge\":\"CartButton_badge__3N0dp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Kt7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__1QvZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__PjkcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1RuyC\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialToggleState = {\r\n    show: true,\r\n    notification: null\r\n}\r\nconst initialToggleSlice = createSlice({\r\n    name: 'toggler',\r\n    initialState: initialToggleState,\r\n    reducers: {\r\n        toggle(state) {\r\n            state.show = !state.show\r\n        },\r\n        showNotification(state, action) {\r\n            state.notification = {\r\n                status: action.payload.status,\r\n                title: action.payload.title,\r\n                message: action.payload.message,\r\n            }\r\n        }\r\n    }\r\n})\r\nexport const toggleActions = initialToggleSlice.actions;\r\n\r\nexport default initialToggleSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { toggleActions } from \"./ui-slice\";\r\n\r\nconst initialCart = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    changed: false,\r\n    // totalAmount: 6\r\n}\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCart,\r\n    reducers: {\r\n        // increment(state) {\r\n        //     state.totalQuantity++;\r\n        //     state.totalAmount += 6\r\n        // },\r\n        // decrement(state) {\r\n        //     state.totalQuantity--;\r\n        //     state.totalAmount -= 6\r\n        // }\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n\r\n            state.totalQuantity--;\r\n\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                state.changed = true;\r\n\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const { title, quantity, total, price, id } = props.item;\n  const dispatch = useDispatch();\n  const incrementHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id, title, price\n    }))\n  }\n  const decrementHandler = () => {\n    dispatch(cartActions.removeFromCart(id))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decrementHandler}>-</button>\n          <button onClick={incrementHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useSelector } from 'react-redux';\nimport Card from '../UI/Card';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\n\nconst Cart = (props) => {\n  // const quantity = useSelector(state => state.cart.quantity)\n  const cartItems = useSelector((state) => state.cart.items);\n\n\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            item={{\n              id: item.id,\n              title: item.name,\n              quantity: item.quantity,\n              price: item.price,\n              total: item.totalPrice\n            }}\n\n          />\n        ))}\n        {/* <CartItem\n          // item={{ title: 'Test Item', quantity: 3, total: 18, price: 6 }}\n          item={{ title: 'Test Item', quantity, total, price: 6 }}\n\n        /> */}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toggleActions } from '../../store/ui-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartCount = useSelector(state => state.cart.totalQuantity)\n  const toggleHandler = () => {\n    dispatch(toggleActions.toggle())\n  }\n  return (\n    <button onClick={toggleHandler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartCount}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport Card from '../UI/Card';\nimport classes from './ProductItem.module.css';\n\nconst ProductItem = (props) => {\n  const { title, price, description, id } = props;\n\n  const dispatch = useDispatch();\n  const addtocartHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id,\n      title,\n      price\n    }))\n  }\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addtocartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from './ProductItem';\nimport classes from './Products.module.css';\nconst DUMMY_PRODUCTS = [\n  {\n    id: 'p1',\n    price: 6,\n    title: \"My first book I ever wrote\",\n    description: 'This is a first product - amazing!'\n\n  },\n  {\n    id: 'p2',\n    price: 5,\n    title: \"My second book I ever wrote\",\n    description: 'This is a second product - amazing!'\n\n  }\n]\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map((product) => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n        {/* <ProductItem\n          title='Test'\n          price={6}\n          description='This is a first product - amazing!'\n        /> */}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\r\n\r\nconst Notification = (props) => {\r\n    let specialClasses = '';\r\n\r\n    if (props.status === 'error') {\r\n        specialClasses = classes.error;\r\n    }\r\n    if (props.status === 'success') {\r\n        specialClasses = classes.success;\r\n    }\r\n\r\n    const cssClasses = `${classes.notification} ${specialClasses}`;\r\n\r\n    return (\r\n        <section className={cssClasses}>\r\n            <h2>{props.title}</h2>\r\n            <p>{props.message}</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Notification;","import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Cart from './components/Cart/Cart';\r\nimport Layout from './components/Layout/Layout';\r\nimport Products from './components/Shop/Products';\r\nimport Notification from './components/UI/Notification';\r\nimport { fetchCartData, sendCartData } from './store/cart-actions';\r\nimport { cartActions } from './store/cart-slice';\r\nimport { toggleActions } from './store/ui-slice';\r\nlet isInitail = true;\r\nfunction App() {\r\n  const show = useSelector(state => state.toggler.show)\r\n  const cart = useSelector(state => state.cart)\r\n  const dispatch = useDispatch();\r\n  const notification = useSelector(state => state.toggler.notification)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCartData())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (isInitail) {\r\n      isInitail = false\r\n      return;\r\n    }\r\n    if (cart.changed) {\r\n      dispatch(sendCartData(cart))\r\n\r\n    }\r\n  }, [cart, dispatch])\r\n  /* \r\nuseEffect(() => {\r\n   const sendCartData = async () => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data...'\r\n      }))\r\n      const response = await fetch('https://advanced-redux-card-data-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(cart)\r\n        })\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending Cart data failed.\")\r\n      }\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'Sent cart data Successfully!'\r\n      }))\r\n      // const responseData = await response.json(); //as no need here\r\n    };\r\n    if (isInitail) {\r\n      isInitail = false\r\n      return;\r\n    }\r\n    sendCartData().catch(error => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Sending cart data failed'\r\n      }))\r\n    })\r\n}, [cart, dispatch])*/\r\n  return (\r\n    <Fragment>\r\n      {notification && <Notification\r\n        status={notification.status}\r\n        title={notification.title}\r\n        message={notification.message}\r\n      />}\r\n      <Layout>\r\n        {show && <Cart />}\r\n        <Products />\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { cartActions } from \"./cart-slice\"\r\nimport { toggleActions } from \"./ui-slice\"\r\n\r\nexport const sendCartData = (cart) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data...'\r\n        }))\r\n        const sendRequest = async () => {\r\n\r\n            const response = await fetch('https://advanced-redux-card-data-default-rtdb.firebaseio.com/cart.json',\r\n                {\r\n                    method: 'PUT',\r\n                    // body: JSON.stringify(cart)\r\n                    body: JSON.stringify({\r\n                        items: cart.items,\r\n                        totalQuantity: cart.totalQuantity\r\n                    })\r\n\r\n                })\r\n            if (!response.ok) {\r\n                throw new Error(\"Sending Cart data failed.\")\r\n            }\r\n        }\r\n        try {\r\n            await sendRequest();\r\n            dispatch(toggleActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'Sent cart data Successfully!'\r\n            }))\r\n\r\n        } catch (error) {\r\n            dispatch(toggleActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Sending cart data failed'\r\n            }))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchdata = async () => {\r\n            const response = await fetch('https://advanced-redux-card-data-default-rtdb.firebaseio.com/cart.json')\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data!')\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        }\r\n        try {\r\n            const cartData = await fetchdata();\r\n            // dispatch(cartActions.replaceCart(cartData))\r\n            dispatch(cartActions.replaceCart({\r\n                items: cartData.items || [],\r\n                totalQuantity: cartData.totalQuantity,\r\n            }))\r\n\r\n        } catch (error) {\r\n            dispatch(toggleActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error!',\r\n                message: 'Fetching cart data failed'\r\n            }))\r\n        }\r\n\r\n    }\r\n}","import toggleReducer from './ui-slice';\r\nimport cartReducer from './cart-slice';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nconst store = configureStore({\r\n    // reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n    reducer: { toggler: toggleReducer, cart: cartReducer },\r\n\r\n});\r\nexport default store;","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1i4Ex\",\"details\":\"CartItem_details__1yeY5\",\"quantity\":\"CartItem_quantity__25PO2\",\"price\":\"CartItem_price__2sYlp\",\"itemprice\":\"CartItem_itemprice__1TBvB\",\"actions\":\"CartItem_actions__1at_r\"};"],"sourceRoot":""}