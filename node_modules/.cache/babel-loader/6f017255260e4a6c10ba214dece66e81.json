{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toggleActions } from \"./ui-slice\";\nconst initialCart = {\n  items: [],\n  totalQuantity: 0 // totalAmount: 6\n\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCart,\n  reducers: {\n    // increment(state) {\n    //     state.totalQuantity++;\n    //     state.totalAmount += 6\n    // },\n    // decrement(state) {\n    //     state.totalQuantity--;\n    //     state.totalAmount -= 6\n    // }\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","toggleActions","initialCart","items","totalQuantity","cartSlice","name","initialState","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeFromCart","filter","cartActions","actions","reducer"],"sources":["D:/MAXI-PROJECTS/19-advanced-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { toggleActions } from \"./ui-slice\";\r\n\r\nconst initialCart = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n    // totalAmount: 6\r\n}\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCart,\r\n    reducers: {\r\n        // increment(state) {\r\n        //     state.totalQuantity++;\r\n        //     state.totalAmount += 6\r\n        // },\r\n        // decrement(state) {\r\n        //     state.totalQuantity--;\r\n        //     state.totalAmount -= 6\r\n        // }\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items;\r\n        },\r\n\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find((item) => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                    name: newItem.title\r\n                })\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price\r\n            }\r\n        },\r\n        removeFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n\r\n            state.totalQuantity--;\r\n\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,YAA9B;AAEA,MAAMC,WAAW,GAAG;EAChBC,KAAK,EAAE,EADS;EAEhBC,aAAa,EAAE,CAFC,CAGhB;;AAHgB,CAApB;AAKA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAEL,WAFY;EAG1BM,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACvBD,KAAK,CAACN,aAAN,GAAsBO,MAAM,CAACC,OAAP,CAAeR,aAArC;MACAM,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAP,CAAeT,KAA7B;IACH,CAZK;;IAcNU,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACzB,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACP,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA/C,CAArB;MACAR,KAAK,CAACN,aAAN;;MAEA,IAAI,CAACW,YAAL,EAAmB;QACfL,KAAK,CAACP,KAAN,CAAYgB,IAAZ,CAAiB;UACbD,EAAE,EAAEJ,OAAO,CAACI,EADC;UAEbE,KAAK,EAAEN,OAAO,CAACM,KAFF;UAGbC,QAAQ,EAAE,CAHG;UAIbC,UAAU,EAAER,OAAO,CAACM,KAJP;UAKbd,IAAI,EAAEQ,OAAO,CAACS;QALD,CAAjB;MAOH,CARD,MAQO;QACHR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BR,OAAO,CAACM,KAA5D;MACH;IACJ,CA/BK;;IAgCNI,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAC1B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAlB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACP,KAAN,CAAYa,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;MAEAR,KAAK,CAACN,aAAN;;MAEA,IAAIW,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC7BX,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYsB,MAAZ,CAAmBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;MACH,CAFD,MAEO;QACHH,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;MACH;IACJ;;EA5CK;AAHgB,CAAD,CAA7B;AAmDA,OAAO,MAAMM,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAetB,SAAS,CAACuB,OAAzB"},"metadata":{},"sourceType":"module"}