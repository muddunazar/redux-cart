{"ast":null,"code":"var _jsxFileName = \"D:\\\\MAXI-PROJECTS\\\\19-advanced-redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData } from './store/cart-actions';\nimport { toggleActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitail = true;\n\nfunction App() {\n  _s();\n\n  const show = useSelector(state => state.toggler.show);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.toggler.notification);\n  useEffect(() => {\n    if (isInitail) {\n      isInitail = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  /* \r\n  useEffect(() => {\r\n   const sendCartData = async () => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data...'\r\n      }))\r\n      const response = await fetch('https://advanced-redux-card-data-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(cart)\r\n        })\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending Cart data failed.\")\r\n      }\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'Sent cart data Successfully!'\r\n      }))\r\n      // const responseData = await response.json(); //as no need here\r\n    };\r\n    if (isInitail) {\r\n      isInitail = false\r\n      return;\r\n    }\r\n    sendCartData().catch(error => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Sending cart data failed'\r\n      }))\r\n    })\r\n  }, [cart, dispatch])*/\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [show && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"v9x5tu1sJ22FNBVT91CjdgN9Kyk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","Notification","sendCartData","toggleActions","isInitail","App","show","state","toggler","cart","dispatch","notification","status","title","message"],"sources":["D:/MAXI-PROJECTS/19-advanced-redux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Cart from './components/Cart/Cart';\r\nimport Layout from './components/Layout/Layout';\r\nimport Products from './components/Shop/Products';\r\nimport Notification from './components/UI/Notification';\r\nimport { sendCartData } from './store/cart-actions';\r\nimport { toggleActions } from './store/ui-slice';\r\nlet isInitail = true;\r\nfunction App() {\r\n  const show = useSelector(state => state.toggler.show)\r\n  const cart = useSelector(state => state.cart)\r\n  const dispatch = useDispatch();\r\n  const notification = useSelector(state => state.toggler.notification)\r\n\r\n  useEffect(() => {\r\n    if (isInitail) {\r\n      isInitail = false\r\n      return;\r\n    }\r\n    dispatch(sendCartData(cart))\r\n  }, [cart, dispatch])\r\n  /* \r\nuseEffect(() => {\r\n   const sendCartData = async () => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'pending',\r\n        title: 'Sending...',\r\n        message: 'Sending cart data...'\r\n      }))\r\n      const response = await fetch('https://advanced-redux-card-data-default-rtdb.firebaseio.com/cart.json',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(cart)\r\n        })\r\n      if (!response.ok) {\r\n        throw new Error(\"Sending Cart data failed.\")\r\n      }\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'Sent cart data Successfully!'\r\n      }))\r\n      // const responseData = await response.json(); //as no need here\r\n    };\r\n    if (isInitail) {\r\n      isInitail = false\r\n      return;\r\n    }\r\n    sendCartData().catch(error => {\r\n      dispatch(toggleActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Sending cart data failed'\r\n      }))\r\n    })\r\n}, [cart, dispatch])*/\r\n  return (\r\n    <Fragment>\r\n      {notification && <Notification\r\n        status={notification.status}\r\n        title={notification.title}\r\n        message={notification.message}\r\n      />}\r\n      <Layout>\r\n        {show && <Cart />}\r\n        <Products />\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AACA,IAAIC,SAAS,GAAG,IAAhB;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,IAAxB,CAAxB;EACA,MAAMG,IAAI,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;EACA,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,YAAY,GAAGd,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcG,YAAxB,CAAhC;EAEAhB,SAAS,CAAC,MAAM;IACd,IAAIS,SAAJ,EAAe;MACbA,SAAS,GAAG,KAAZ;MACA;IACD;;IACDM,QAAQ,CAACR,YAAY,CAACO,IAAD,CAAb,CAAR;EACD,CANQ,EAMN,CAACA,IAAD,EAAOC,QAAP,CANM,CAAT;EAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,oBACE,QAAC,QAAD;IAAA,WACGC,YAAY,iBAAI,QAAC,YAAD;MACf,MAAM,EAAEA,YAAY,CAACC,MADN;MAEf,KAAK,EAAED,YAAY,CAACE,KAFL;MAGf,OAAO,EAAEF,YAAY,CAACG;IAHP;MAAA;MAAA;MAAA;IAAA,QADnB,eAME,QAAC,MAAD;MAAA,WACGR,IAAI,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADX,eAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GA7DQD,G;UACMR,W,EACAA,W,EACID,W,EACIC,W;;;KAJdQ,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}